name: Python Build

on:
  push:
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7, 3.8, 3.9 ]
        torch-version: [ 1.5.0, 1.6.0, 1.7.1, 1.8.1 ]
        tensorflow-version: [ 1.15.0, 2.2.0, 2.5.0 ]
        test-details:
          - { dep: forte-wrapper, testfile: tests/fortex/health/processors/icd_coding_processor_test.py }
          - { dep: forte-wrapper, testfile: tests/fortex/health/processors/negation_context_analysis_test.py }
          - { dep: scispacy, testfile: tests/fortex/health/processors/scispacy_processor_test.py }
          - { testfile: tests/fortex/health/readers/mimic3_note_reader_test.py }
          - { testfile: tests/fortex/health/readers/xray_image_reader_test.py }
          - { testfile: tests/fortex/health/processors/xray_processor_test.py }
          - { dep: tagger_normalizer, testfile: tests/fortex/health/processors/temporal_mention_normalizing_processor_test.py }
          - { dep: tagger_normalizer, testfile: tests/fortex/health/processors/temporal_mention_tagging_processor_test.py } 
        exclude:
          - python-version: 3.6
            torch-version: 1.7.1
          - python-version: 3.6
            torch-version: 1.8.1
          - python-version: 3.6
            tensorflow-version: 2.2.0
          - python-version: 3.6
            tensorflow-version: 2.5.0
          - python-version: 3.7
            torch-version: 1.7.1
          - python-version: 3.7
            torch-version: 1.8.1
          - python-version: 3.7
            tensorflow-version: 2.2.0
          - python-version: 3.7
            tensorflow-version: 2.5.0
          - python-version: 3.8
            torch-version: 1.5.0
          - python-version: 3.8
            torch-version: 1.6.0
          - python-version: 3.8 
            tensorflow-version: 1.15.0
          - python-version: 3.8
            tensorflow-version: 2.5.0
          - python-version: 3.9
            torch-version: 1.5.0
          - python-version: 3.9
            torch-version: 1.6.0
          - python-version: 3.9 
            tensorflow-version: 1.15.0
          - python-version: 3.9
            tensorflow-version: 2.2.0
          - python-version: 3.6
            test-details: { dep: tagger_normalizer, testfile: tests/fortex/health/processors/temporal_mention_normalizing_processor_test.py }

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-

    - name: Install dependencies
      run: |
        sudo apt-get install -y libsndfile1-dev
        python -m pip install --progress-bar off --upgrade pip
        pip install --progress-bar off Django django-guardian
        pip install --progress-bar off pylint==2.10.2 importlib-metadata==4.8.0 flake8==3.9.2 mypy==0.931 pytest==5.1.3 black==20.8b1 click==8.0.1
        pip install --progress-bar off types-PyYAML==5.4.8 types-typed-ast==1.4.4 types-requests==2.25.6 types-dataclasses==0.1.7
        pip install --progress-bar off coverage codecov

    - name: Install deep learning frameworks
      run: |
        pip install --progress-bar off torch==${{ matrix.torch-version }}
        pip install --progress-bar off tensorflow==${{ matrix.tensorflow-version }}

    - name: Format check with Black
      run: |
        black --line-length 80 --check fortex/ tests/

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 fortex/ examples/ tests/ ftx/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 fortex/ examples/ ftx/ tests/ --ignore E203,W503 --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Lint with pylint
      run: |
        pylint fortex/ tests/

    - name: Lint main code with mypy when torch version is not 1.5.0 and python is 3.9
      run: |
        if [[ ${{ matrix.torch-version }} != "1.5.0" && ${{ matrix.python-version }} == "3.9" ]]; then mypy fortex/ tests/ ; fi

    - name: Install requirements for tests
      run: |
        pip install --progress-bar off .[test]

    - name: Install Forte-wrappers-spacy
      if: ${{ matrix.test-details.dep == 'forte-wrapper' ||
              contains(matrix.test-details.dep, 'forte-wrapper') }}
      run: |        
        git clone https://github.com/asyml/forte-wrappers.git
        cd forte-wrappers
        pip install src/spacy

    - name: Install scispacy
      if: ${{ matrix.test-details.dep == 'scispacy' ||
              contains(matrix.test-details.dep, 'scispacy') }}
      run: |        
        pip install --progress-bar off .[scispacy_processor]

    - name: Install temporal processor dependencies
      if: ${{ matrix.test-details.dep == 'tagger_normalizer' ||
              contains(matrix.test-details.dep, 'tagger_normalizer') }}
      run: |
        git clone https://github.com/asyml/forte-wrappers.git
        cd forte-wrappers
        pip install src/spacy        
        pip install --progress-bar off .[tagger_normalizer_processor]

    - name: Test with pytest and run coverage
      run: |
        coverage run -m pytest ${{ matrix.test-details.testfile}}
#        coverage run --append -m pytest --doctest-modules fortex/
    
    - uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

  docs:
    needs: build
    runs-on: ubuntu-latest
    env:
      python-version: 3.8
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          sudo apt-get install pandoc
          pip install --progress-bar off -r requirements.txt
          pip install --progress-bar off -r docs/requirements.txt
          pip install --progress-bar off .

      - name: Build Docs
        run: |
          cd docs
          sphinx-build -W -b html -d _build/doctrees . _build/html
          sphinx-build -W -b spelling -d _build/doctrees . _build/spelling
          cd ..
